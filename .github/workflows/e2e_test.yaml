name: E2E tests

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  e2e_tests:
    strategy:
      matrix:
        # ref: https://github.com/actions/runner-images
        os: [ubuntu-20.04, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: install vfox (Linux)
        if: runner.os == 'Linux'
        run: |
          echo "deb [trusted=yes] https://apt.fury.io/versionfox/ /" | sudo tee /etc/apt/sources.list.d/versionfox.list
          sudo apt-get update
          sudo apt-get install vfox
      
      - name: install vfox (MacOS)
        if: runner.os == 'MacOS'
        run: |
          brew tap version-fox/tap
          brew install vfox
      
      - name: add vfox-erlang & vfox-elixir plugin
        run: |
          vfox add --source https://github.com/yeshan333/vfox-erlang/archive/refs/heads/main.zip erlang
          vfox add --source https://github.com/yeshan333/vfox-elixir/archive/refs/heads/main.zip elixir

      - name: install Erlang/OTP by vfox-erlang plugin (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get -y install build-essential autoconf m4 libncurses5-dev libwxgtk3.0-gtk3-dev libwxgtk-webview3.0-gtk3-dev libgl1-mesa-dev libglu1-mesa-dev libpng-dev libssh-dev unixodbc-dev xsltproc fop libxml2-utils libncurses-dev openjdk-11-jdk
          echo 'eval "$(vfox activate bash)"' >> ~/.bashrc
          source ~/.bashrc
          vfox install erlang@26.2.3
          vfox use -g erlang@26.2.3
          echo "===============PATH==============="
          echo $PATH
          echo "===============PATH==============="
          vfox install elixir@1.16.2
          vfox use -g elixir@1.16.2

      - name: install Erlang/OTP by vfox-erlang plugin (Darwin)
        if: runner.os == 'MacOS'
        run: |
          brew install autoconf libxslt fop wxwidgets openssl
          echo 'eval "$(vfox activate bash)"' >> ~/.bashrc
          source ~/.bashrc
          vfox install erlang@26.2.3
          vfox use -g erlang@26.2.3
          echo "===============PATH==============="
          echo $PATH
          echo "===============PATH==============="
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/erl /usr/local/bin/erl
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/escript /usr/local/bin/escript
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/start_clean.script /usr/local/bin/start_clean.script
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/ct_run /usr/local/bin/ct_run
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/no_dot_erlang.boot /usr/local/bin/no_dot_erlang.boot
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/dialyzer /usr/local/bin/dialyzer
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/no_dot_erlang.script /usr/local/bin/no_dot_erlang.script
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/erl /usr/local/bin/erl
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/start.boot /usr/local/bin/start.boot
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/typer /usr/local/bin/typer
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/erl_call /usr/local/bin/erl_call
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/start.script /usr/local/bin/start.script
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/erlc /usr/local/bin/erlc
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/start_clean.boot /usr/local/bin/start_clean.boot
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/start_sasl.boot /usr/local/bin/start_sasl.boot
          ln -sf ~/.version-fox/cache/erlang/v-26.2.3/erlang-26.2.3/bin/start_sasl.script /usr/local/bin/start_sasl.script
          vfox install elixir@1.16.2
          vfox use -g elixir@1.16.2
          